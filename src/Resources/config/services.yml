parameters:
    tokenizer_algorithms:
        RS256: { digest: sha256, key_bit: 2048, key_type: !php/const \OPENSSL_KEYTYPE_RSA }
        RS384: { digest: sha384, key_bit: 2048, key_type: !php/const \OPENSSL_KEYTYPE_RSA }
        RS512: { digest: sha512, key_bit: 4096, key_type: !php/const \OPENSSL_KEYTYPE_RSA }
        HS256: { digest: sha256, key_bit: 384, key_type: !php/const \OPENSSL_KEYTYPE_DH }
        HS384: { digest: sha384, key_bit: 384, key_type: !php/const \OPENSSL_KEYTYPE_DH }
        HS512: { digest: sha512, key_bit: 512, key_type: !php/const \OPENSSL_KEYTYPE_DH }
        ES256: { digest: sha256, key_bit: 384, key_type: !php/const \OPENSSL_KEYTYPE_EC, curve: secp256k1 }
        ES384: { digest: sha384, key_bit: 512, key_type: !php/const \OPENSSL_KEYTYPE_EC, curve: secp384r1 }
        ES512: { digest: sha512, key_bit: 1024, key_type: !php/const \OPENSSL_KEYTYPE_EC, curve: secp521r1 }

services:

    _defaults:
        autowire: TRUE
        autoconfigure: TRUE
        public: TRUE

    Pierotto\TokenizerBundle\Tokenizer\Tokenizer:
        arguments:
            $secretKey: '%tokenizer.secret_key%'
            $publicKey: '%tokenizer.public_key%'
            $passphrase: '%tokenizer.pass_phrase%'

    Pierotto\TokenizerBundle\Algorithm\AlgorithmFactory:
        arguments:
            $algorithm: '%tokenizer.algorithm%'
            $algorithms: '%tokenizer_algorithms%'

    Pierotto\TokenizerBundle\Algorithm\Algorithm:
        factory: ['@Pierotto\TokenizerBundle\Algorithm\AlgorithmFactory', 'create']

    Pierotto\TokenizerBundle\Command\GenerateKeyCommand:
        arguments:
            $passphrase: '%tokenizer.pass_phrase%'
            $secretKey: '%tokenizer.secret_key%'
            $publicKey: '%tokenizer.public_key%'
